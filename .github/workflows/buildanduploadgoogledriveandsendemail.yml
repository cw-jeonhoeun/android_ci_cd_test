name: Build And Upload Google Drive And Send Email
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  buildAndUploadGoogleDriveAndSendEmail:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo 'id ${{github.event.head_commit.id}}'
      - run: echo 'tree_id ${{github.event.head_commit.tree_id}}'
      - run: echo 'message ${{github.event.head_commit.message }}'
      - run: echo 'timestamp ${{github.event.head_commit.timestamp}}'
      - run: echo 'authorname ${{github.event.head_commit.author.name}}'
      - run: echo 'authoremail ${{github.event.head_commit.author.email}}'
      - run: echo 'committername ${{github.event.head_commit.committer.name}}'
      - run: echo 'committeremail ${{github.event.head_commit.committer.email}}'
      - name : setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 9
          format: 'YYYY-MM-DD-HH-mm-ss'  
      - name: build Release APK
        run: bash ./gradlew assemblerelease
      - name: build Debug APK
        run: bash ./gradlew assembledebug
      - name: install postfix
        run: sudo apt-get install postfix
      - name: install mutt
        run: sudo apt-get install mutt
      - name: upload to google drive
        env:
          TIME: "${{ steps.time.outputs.time }}"
        run: java -jar ./googledrive/googledrive.jar 빌드자동화프로젝트 ${{secrets.PRIVATE_KEY}} ${{secrets.SERVICE_ACCOUNT_EMAIL}} './app/build/outputs/apk/release/app-release-unsigned.apk ./app/build/outputs/apk/debug/app-debug.apk' cicd_release 'cicd-release-${{ steps.time.outputs.time }}.apk cicd-debug-${{ steps.time.outputs.time }}.apk' 'release debug' ${{secrets.SHARE_EMAIL}}
      - name: send mail
        run: mutt -s " ci cd apk build completed ${{ steps.time.outputs.time }} " ${{secrets.SHARE_EMAIL}} < message.txt
      - name: set naver works message
        env:
          NAVERMSG: ${{"`cat naverworks.txt 2>&1`"}}
        run: echo "navermsg = ${NAVERMSG}"
      - name: check naver msg 2
        run: cat ./naverworks.txt
      - name: send naver works message
        env:
          NAVERMSG: ${{"`cat naverworks.txt 2>&1`"}}      
        run: curl -d "botId=${{secrets.BOT_ID}}&applicationId=${{secrets.SHARE_EMAIL}}&content=${NAVERMSG}" -X POST ${{secrets.BOT_URL}}
        
